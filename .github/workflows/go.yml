# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        go: ["1.21.7"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: build
        run: go build -v ./...
      - name: test
        env:
          TESTCOVERAGE_TRESHOLD: 75
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out
          totalCoverage=`cat coverage.out | grep 'total' | grep -Eo '[0-9\.]+'`
          if (( $(echo "$totalCoverage $TESTCOVERAGE_TRESHOLD" |awk '{print ($1 >= $2)}') )); then 
            echo "OK"
          else
            echo "Current test coverage too low"
            exit 1
          fi
      - uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "2023.1.6"
          min-go-version: ${{ matrix.go }}
          install-go: false
      - name: gofumpt
        env:
          GOFUMPT_VERSION: v0.4.0
        run: |
          go install mvdan.cc/gofumpt@${GOFUMPT_VERSION}
          RESULT=$(gofumpt -l .)
          if [[ -n $RESULT ]]; then
            echo "Following files must be re-formatted"
            echo "$RESULT"
            exit 1
          else
            echo "OK"
          fi
